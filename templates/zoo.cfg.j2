# {{ ansible_managed }}

# The number of milliseconds of each tick
tickTime={{ zookeeper_ticktime }}

# The number of ticks that the initial
# synchronization phase can take
initLimit={{ zookeeper_init_limit }}

# The number of ticks that can pass between
# sending a request and getting an acknowledgement
syncLimit={{ zookeeper_sync_limit }}

# the directory where the snapshot is stored.
# do not use /tmp for storage, /tmp here is just
# example sakes.
dataDir={{ zookeeper_data_dir }}

# Directory to write the transaction log to the dataLogDir rather than the dataDir.
# This allows a dedicated log device to be used, and helps avoid competition between logging and snaphots.
dataLogDir={{ zookeeper_data_log_dir }}

# the port at which the clients will connect
clientPort={{ zookeeper_client_port }}

# the maximum number of client connections.
# increase this if you need to handle more clients
maxClientCnxns={{ zookeeper_max_client_cnxns }}

#
# Be sure to read the maintenance section of the
# administrator guide before turning on autopurge.
#
# http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance
#
# The number of snapshots to retain in dataDir
autopurge.snapRetainCount={{ zookeeper_autopurge_snap_retain_count }}
# Purge task interval in hours
# Set to "0" to disable auto purge feature
autopurge.purgeInterval={{ zookeeper_purge_interval }}

# List of clustered ZooKeeper nodes.
# Port 2888 is the default quorum port and 3888 is the default
# leader election port. These must be unique per server.
# Each server also needs a /var/lib/zookeeper/myid file created containing
# a single unique number, e.g. 1, 2, etc.
{% for host in zookeeper_servers %}
server.{{ hostvars[host].zookeeper_id | default(zookeeper_id) }}={{ hostvars[host].ansible_nodename }}:{{ zookeeper_leader_port }}:{{ zookeeper_election_port }}
{% endfor %}

{% if zookeeper_version is version('3.5', '>=') %}
# AdminServer
admin.enableServer={{ zookeeper_enable_server | ternary('true', 'false') }}
admin.serverAddress={{ zookeeper_server_address }}
admin.serverPort={{ zookeeper_server_port }}
admin.idleTimeout={{ zookeeper_idle_timeout }}
admin.commandURL={{ zookeeper_command_url }}
4lw.commands.whitelist={{ zookeeper_command_whitelist }}
{% endif %}

{% if zookeeper_version is version('3.6', '>=') %}
# Metrics Providers
metricsProvider.className={{ zookeeper_metricsprovider_classname }}
metricsProvider.httpPort={{ zookeeper_metricsprovider_httpport }}
metricsProvider.exportJvmInfo={{ zookeeper_metricsprovider_exportjvminfo | ternary('true', 'false') }}
{% endif %}
